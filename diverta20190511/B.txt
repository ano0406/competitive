void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <functional>
#include <map>
#include <string>
#include <boost/multiprecision/cpp_int.hpp>
#include <limits.h>

using namespace std;
using namespace boost::multiprecision;
int R, G, B, N;

void solve() {
	cin >> R >> G >> B >> N;
	long long ans = 0;
	for (int g = 0; g <= N; g += G) {
		for (int r = 0; r <= N; r += R) {
			if (N - g - r >= 0 && (N - g - r) % B == 0)ans++;
		}
	}
	cout << ans << endl;
	return;
}