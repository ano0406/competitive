#include <iostream>
#include <algorithm>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <math.h>

using namespace std;
typedef pair<int, int> pii;
typedef pair<int, long double> pild;
typedef pair<long double, int> pldi;

void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
int N;
int arr[100000];
long int dp[100000][2];

void solve() {
	cin >> N;
	for (int n = 0; n < N; n++) cin >> arr[n];
	dp[1][0] = -arr[0]-arr[1];
	dp[1][1] = arr[0]+arr[1];
	for (int n = 2; n < N; n++) {
		dp[n][0] = max(dp[n-1][0]+2*arr[n-1]-arr[n],dp[n-1][1]-2*arr[n-1]-arr[n]);
		dp[n][1] = max(dp[n-1][0]+arr[n],dp[n-1][1]+arr[n]);
	}
	cout << max(dp[N - 1][0], dp[N - 1][1]) << endl;
	return;
}