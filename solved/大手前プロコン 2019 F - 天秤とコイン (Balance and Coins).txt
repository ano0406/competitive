void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
using namespace std;

int N, D;
vector<long long> dp, dpmin;
vector<long long> sum;
vector<long long> M;

void solve() {
	cin >> N >> D;
	dp.resize(N + 1,0);
	dpmin.resize(N + 1,0);
	sum.resize(N + 1,0);
	M.resize(N+1);
	for (int d = 1; d <= D; d++) {
		for (int m = 1; m <= N; m++)cin >> M[m];
		sum[N] = M[N];
		for (int n = N - 1; n >= 1; n--)sum[n] = sum[n + 1] + M[n];
		for (int n = N; n >= 1; n--) {
			dp[n] = dpmin[n] + max(2*sum[n]-sum[1],sum[1]-2*sum[n]);
		}
		dpmin[1] = dp[1];
		for (int n = 2; n <= N; n++)dpmin[n] = min(dpmin[n - 1], dp[n]);
	}
	cout << dpmin[N] << endl;
	return;
}
