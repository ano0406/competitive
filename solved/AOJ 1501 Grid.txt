void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <vector>
#include <algorithm>
#include <math.h>
using namespace std;
typedef pair<int, int> pii;
typedef long double ld;
typedef long long ll;

void solve() {
	int r, c, ax, ay, bx, by;
	cin >> r >> c >> ax >> ay >> bx >> by;
	int x = (int)abs(ax - bx), y = (int)abs(ay - by);
	int xx = (r - x == x && x != 0? 2 : 1), yy = (c - y == y && y != 0? 2 : 1);
	x = min(x, r - x), y = min(y, c - y);
	vector<vector<long long>> dp;
	dp.resize(x + y + 1);
	dp[1].resize(3);
	dp[1][0] = 1;
	dp[1][1] = 1;
	dp[1][2] = 0;
	int M = 1e8 + 7;
	for (int n = 2; n <= x + y; n++) {
		dp[n].resize(n + 2);
		dp[n][0] = 1;
		for (int r = 1; r <= n; r++) {
			dp[n][r] = (dp[n - 1][r - 1] + dp[n - 1][r])%M;
		}
		dp[n][n + 1] = 0;
	}
	cout << (dp[x + y][x]*xx*yy)%M << endl;
}