void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
typedef pair<int, int> pii;

int N, Q;
vector<long long> A;
vector<long long> sum;
vector<long long> ansv;

void solve() {
	cin >> N >> Q;
	A.resize(N);
	for (int n = 0; n < N; n++)cin >> A[n];
	sum.resize(N + 2);
	sum[0] = 0;
	for (int i = 0; i < N; i++)sum[i + 1] = sum[i] + A[i];
	sum[N + 1] = (2e14) + 1;
	ansv.resize(Q);
	for (int q = 0; q < Q; q++) {
		long long x;
		cin >> x;
		long long ans = 0;
		for (int l = 1; l <= N; l++) {
			long long f = x + sum[l - 1];
			int s = 0, e = N + 1;
			while (e - s > 1) {
				int m = (s + e) / 2;
				if (sum[m] <= f)s = m;
				else e = m;
			}
			if (s < l)continue;
			else ans += (s - l+1);
		}
		ansv[q] = ans;
	}
	for (int q = 0; q < Q; q++)cout << ansv[q] << endl;
	return;
}