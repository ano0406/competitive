#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
#include <complex>
#include <cstdio>
#include <list>
#include <bitset>

//< in.txt > out.txt
using namespace std;
//std::ios::sync_with_stdio(false);
//std::cin.tie(0);
const long long MOD = 1e9 + 7;
typedef long long ll;
typedef long long LL;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
typedef vector<ll> VLL;
typedef vector<VLL> VVLL;
typedef unsigned long long ULL;
//typedef boost::multiprecision::cpp_int bigint;

int main() {
	std::ios::sync_with_stdio(false);
	std::cin.tie(0);
	LL N;
	cin >> N;
	LL ans = 0;
	for (LL A = 1; A <= N; A++) {
		LL AC = A;
		LL aa = A% 10;
		if (aa == 0)continue;
		LL a;
		while (AC > 0) {
			a = AC % 10;
			AC /= 10;
		}
		if (a == aa) {
			if (a <= N) {
				ans++;
			}
		}
		if (10 * aa + a <= N) {
			ans++;
		}
		for (LL x = 0; x < 10; x++) {
			if (100 * aa + 10*x + a <= N) {
				ans++;
			}
		}
		for (LL x = 0; x < 100; x++) {
			if (1000 * aa + 10*x + a <= N) {
				ans++;
			}
		}
		for (LL x = 0; x < 1000; x++) {
			if (10000 * aa + 10*x + a <= N) {
				ans++;
			}
		}
		for (LL x = 0; x < 10000; x++) {
			if (100000 * aa + 10*x + a <= N) {
				ans++;
			}
		}
	}
	cout << ans << "\n";
	return 0;
}
