void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <functional>
#include <map>
#include <string>
#include <boost/multiprecision/cpp_int.hpp>
#include <limits.h>
#include <math.h>

using namespace std;
using namespace boost::multiprecision;

cpp_int N;
void solve() {
	cin >> N;
	cpp_int ans = 0;
	for (cpp_int i = 1;i*i < N; i++) {
		if (N%i == 0) {
			cpp_int m = (N / i) - 1;
			if (m + 1 <= N && N < m*(m + 1))
				ans += m;
		}
	}
	cout << ans << endl;
	return;
}
