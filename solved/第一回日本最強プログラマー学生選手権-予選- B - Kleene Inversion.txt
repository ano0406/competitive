void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
using namespace std;

int N;
long long K;
vector<int> A;
int MOD = 1e9 + 7;

void solve() {
	cin >> N >> K;
	A.resize(2*N);
	for (int n = 0; n < N; n++) {
		cin >> A[n];
		A[n + N] = A[n];
	}
	long long counter = 0;
	for (int i = 0; i < N; i++) {
		long long a = 0, b = 0;
		for (int j = i + 1; j < N; j++) {
			if (A[i] > A[j])a++;
		}
		for (int j = N; j < N + i; j++) {
			if (A[i] > A[j])b++;
		}
		long long temp1 = K * (K + 1) / 2;
		temp1 %= MOD;
		counter += temp1 * a;
		counter %= MOD;
		long long temp2 = K * (K - 1) / 2;
		temp2 %= MOD;
		counter += temp2*b;
		counter %= MOD;
	}
	cout << counter << endl;
}
