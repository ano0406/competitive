#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
using namespace std;
long long MOD = 1e9 + 7;

long long N, A, B;
vector<long long> H;

bool judge(long long K) {
	long long time = 0;
	for (int n = 0; n < N; n++) {
		if (H[n] - B * K <= 0)continue;
		time += ceil((long double)(H[n] - B * K) / (A - B));
		if (time > K)return false;
	}
	return true;
}

long long sum = 0;

int main() {
	cin >> N >> A >> B;
	H.resize(N);
	for (int n = 0; n < N; n++) {
		cin >> H[n];
		sum += H[n];
	}
	long long s = 0, e = sum / B;
	while (e - s > 1) {
		long long m = (e + s) / 2;
		if (judge(m))e = m;
		else s = m;
	}
	cout << e << endl;
	return 0;
}
