void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
using namespace std;

int N, M;
vector<vector<int>> A, B;

void solve() {
	cin >> N >> M;
	A.resize(N);
	B.resize(N);
	for (int n = 0; n < N; n++) {
		A[n].resize(M);
		B[n].resize(M);
	}
	for (int n = 0; n < N; n++) {
		for (int m = 0; m < M; m++)cin >> A[n][m];
	}
	for (int n = 0; n < N; n++) {
		for (int m = 0; m < M; m++)cin >> B[n][m];
	}
	long long t = 0;
	for (int n = 0; n < N; n++) {
		long long tempans = LLONG_MAX;
		for (int m = 0; m < M; m++) {
			long long temp = t;
			if (temp % A[n][m] == 0)temp += B[n][m];
			else temp = temp - (temp % A[n][m]) + A[n][m] + B[n][m];
			tempans = min(tempans, temp);
		}
		t = tempans;
	}
	cout << t << endl;
}
