#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
#include <complex>
#include <cstdio>
#include <list>

using namespace std;
//std::ios::sync_with_stdio(false);
//std::cin.tie(0);
const long long MOD = 1e9 + 7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
typedef vector<ll> VLL;
typedef vector<VLL> VVLL;
//typedef boost::multiprecision::cpp_int bigint;

int main() {
	std::ios::sync_with_stdio(false);
	std::cin.tie(0);
	ll A, B, C, D, E;
	cin >> A >> B >> C >> D >> E;
	ll ans = 0;
	while (A < B) {
		if (A < 0) {
			ans += min(0 - A, B - A) * C;
			A = min((ll)0, B);
			continue;
		}
		if (A == 0) {
			ans += D+E;
			A = 1;
			continue;
		}
		if (A > 0) {
			ans += (B - A) * E;
			A = B;
		}
	}
	cout << ans << "\n";
	return 0;
}
