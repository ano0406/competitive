void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <algorithm>
#include <string>
using namespace std;
int dp[1001][1001];

void solve() {
	string S1, S2;
	cin >> S1 >> S2;
	for (int i = 0; i <= S1.size(); i++) {
		for (int j = 0; j <= S2.size(); j++)dp[i][j] = 1000000;
	}
	dp[0][0] = 0;
	for (int i = 0; i <= S1.size(); i++) {
		for (int j = 0; j <= S2.size(); j++) {
			if (i - 1 >= 0 && j - 1 >= 0) {
				if(S1[i-1] != S2[j-1])dp[i][j] = min(dp[i][j], dp[i - 1][j - 1] + 1);
				else dp[i][j] = min(dp[i][j], dp[i - 1][j - 1]);
			}
			if (i - 1 >= 0)dp[i][j] = min(dp[i][j],dp[i-1][j]+1);
			if (j - 1 >= 0)dp[i][j] = min(dp[i][j],dp[i][j-1]+1);
		}
	}
	cout << dp[S1.size()][S2.size()] << endl;
	return;
}