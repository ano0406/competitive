void 
solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <algorithm>
#include <vector>
#include <iomanip>
using namespace std;

int N, K;
vector<int> W, P;

void solve() {
	cin >> N >> K;
	W.resize(N); P.resize(N);
	for (int n = 0; n < N; n++) cin >> W[n] >> P[n];
	double e = 100, s = 0;
	vector<double> temp;
	temp.resize(N);
	while (e - s > 1e-6) {
		double m = (e + s) / 2;
		for (int n = 0; n < N; n++) {
			temp[n] = (double)W[n] * ((double)P[n] - m);
		}
		sort(temp.begin(), temp.end());
		double res = 0;
		for (int n = N - 1; n >= N - K; n--)res += temp[n];
		if (res >= 0)s = m;
		else e = m;
		
	}
	cout << std::setprecision(8) << showpoint << s << endl;
	return;
}