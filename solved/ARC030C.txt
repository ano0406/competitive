#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
#include <complex>
#include <cstdio>
#include <list>
#include <bitset>

//< in.txt > out.txt
using namespace std;
//std::ios::sync_with_stdio(false);
//std::cin.tie(0);
const long long MOD = 1e9 + 7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
typedef vector<ll> VLL;
typedef vector<VLL> VVLL;
//typedef boost::multiprecision::cpp_int bigint;

ll N, K;
VLL A, B;

//Xà»â∫ÇÃêî
ll count(ll X) {
	ll ans = 0;
	for (ll n = 0; n < N; n++) {
		ll s = -1, e = N;
		//A[n]*B[s]<=X<A[n]*B[e]
		while (e - s > 1) {
			ll m = (e + s) / 2;
			if (A[n] * B[m] > X)e = m;
			else s = m;
		}
		ans += e;
	}
	return ans;
}

int main() {
	std::ios::sync_with_stdio(false);
	std::cin.tie(0);
	cin >> N >> K;
	A.resize(N);
	B.resize(N);
	for (ll n = 0; n < N; n++)cin >> A[n];
	for (ll n = 0; n < N; n++)cin >> B[n];
	sort(B.begin(), B.end(), [](ll a, ll b) {
		return a < b;
	});
	ll s = 0, e = 1e18+1;
	//sà»â∫ÇÃêîÇÕ<Kå¬
	//eà»è„ÇÃêîÇÕ>=Kå¬
	while (e - s > 1) {
		ll m = (e+s)/2;
		if (count(m) < K)s = m;
		else e = m;
	}
	cout << e << "\n";
	return 0;
}
