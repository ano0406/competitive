#include <iostream>
#include <math.h>
#include <algorithm>
#include <vector>
#include <iomanip>
using namespace std;

void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
int N, M;
int S[393], L[393], P[393], W[393];
int dp[394][394];

void solve() {
	cin >> N;
	for (int n = 0; n < N; n++)cin >> S[n] >> L[n] >> P[n];
	cin >> M;
	for (int m = 0; m < M; m++)cin >> W[m];
	for (int l = 1; l <= 393; l++)dp[l][0] = -1;
	dp[0][0] = 0;
	for (int i = 1; i <= N; i++) {


		for (int l = 0; l <= 393; l++) {
			dp[l][i] = dp[l][i - 1];
			for (int ll = S[i-1]; ll <= L[i-1]; ll++) {
				if (l - ll >= 0) {
					if(dp[l - ll][i] != -1)dp[l][i] = max(dp[l][i], dp[l - ll][i] + P[i-1]);
				}
			}
		}
	}
	vector<int> ans;
	for (int m = 0; m < M; m++) {
		if (dp[W[m]][N] == -1) {
			cout << -1 << endl;
			return;
		}
		ans.push_back(dp[W[m]][N]);
	}
	for (int m = 0; m < M; m++)cout << ans[m] << endl;
	return;
}