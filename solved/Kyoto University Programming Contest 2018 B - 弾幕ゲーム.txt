#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
using namespace std;

int H, W;
vector<vector<int>> board;   //y座標、x座標 1->弾
vector<vector<vector<string>>> result;
//時刻、y座標、x座標 その時間にそこにいるための操作手順
int X, Y;   //始めの位置

int main() {
	cin >> H >> W;
	board.resize(H + 2, vector<int>(W + 2,0));
	for (int y = 1; y <= H; y++) {
		string S;
		cin >> S;
		for (int x = 1; x <= W; x++) {
			if (S[x - 1] == 'x')board[y][x] = 1;
			else if (S[x - 1] == 's'){
				X = x;
				Y = y;
			}
		}
	}
	result.resize(H, vector<vector<string>>(H+2, vector<string>(W+2, string("N"))));
	result[0][Y][X] = string("");
	for (int t = 1; t < H; t++) {
		//マップ遷移
		for (int y = H; y > 0; y--)board[y] = board[y - 1];
		int vect[3][2] = {
			{1,0},{-1,0},{0,0}
		};
		string vects[5] = {
			string("R"),string("L"),string("S")
		};
		for (int x = 1; x <= W; x++) {
			if (board[H][x] == 1)continue;
			for (int v = 0; v < 3; v++) {
				if (result[t - 1][H][x - vect[v][0]] != string("N")) {
					result[t][H][x] = result[t - 1][H][x - vect[v][0]] + vects[v];
					break;
				}
			}

		}
	}
	for (int x = 1; x <= W; x++) {
		if (result[H - 1][H][x] != string("N")) {
			cout << result[H - 1][H][x] << endl;
			return 0;
		}
	}
	cout << "impossible" << endl;
	return 0;
}
