#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
using namespace std;
const long long MOD = 1e9+7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
//typedef boost::multiprecision::cpp_int bigint;

ll N;
string V[3] = { string("a"),string("b"),string("c") };

int main() {
	cin >> N;
	ll cmax = 1;
	for (ll n = 1; n <= N; n++)cmax *= 3;
	for (ll oldc = 0, c = 0; oldc < cmax; oldc++, c = oldc) {
		string ans("");
		for (ll n = 0; n < N; n++) {
			ans = V[c % 3] + ans;
			c /= 3;
		}
		cout << ans << endl;
	}
	return 0;
}
s