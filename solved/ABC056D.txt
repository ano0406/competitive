#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
using namespace std;
int MOD = 1e9 + 7;

int N, K;
vector<int> A;
vector < long long > DP;

int main() {
	cin >> N >> K;
	A.resize(N);
	for (int n = 0; n < N; n++)cin >> A[n];
	DP.resize(10000+1, 0);
	DP[0] = 1;
	DP[A[0]] = 1;
	for (int n = 1; n < N; n++) {
		for (int s = 10000; s >= 0; s--) {
			if (s - A[n] >= 0)DP[s] += DP[s - A[n]];
		}
	}
	int ans = 0;
	vector<long long> back(10000+1,0);
	for (int n = 0; n < N; n++) {
		if (A[n] >= K)continue;
		long long tempsum = 0;
		for (int s = 0; s <= K-1; s++) {
			long long temp = DP[s];
			if (s - A[n] >= 0)temp -= back[s - A[n]];
			back[s] = temp;
			if (s >= K - A[n])tempsum += temp;
		}
		if (tempsum == 0)ans++;
	}
	cout << ans << endl;
	return 0;
}
