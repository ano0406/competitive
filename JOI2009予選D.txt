#include <iostream>
#include <string>
#include <stack>
#include <vector>
#include <queue>
#include <math.h>
#include <algorithm>
#include <numeric>
#include <set>

using namespace std;

void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////

int N, K;
string S[10];

void solve() {
	cin >> N >> K;
	for (int i = 0; i < N; i++)cin >> S[i];
	int comb = (1 << K) - 1;
	set<int> s;
	while (comb < 1 << N) {
		vector<int> v;
		for (int i = 0; i < N; i++) {
			if ((comb & (int)pow(2, i)) != 0)v.push_back(i);
		}
		do {
			string str("");
			for (auto itr = v.begin(); itr != v.end(); itr++)str += S[*itr];
			s.insert(stoi(str));
		} while (next_permutation(v.begin(), v.end()));
		int x = comb & -comb;
		int y = comb + x;
		comb = ( (comb & ~y) / x >> 1) | y;
	}
	cout << s.size() << endl;
}