#include <iostream>
#include <math.h>
#include <algorithm>
#include <vector>
using namespace std;

void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////

int N, W;
int v[100], w[100];
int dp[100][10001];

void solve() {
	cin >> N >> W;
	for (int i = 0; i < N; i++)cin >> v[i] >> w[i];

	for (int n = 0; n < N; n++) {
		for (int _w = 0; _w < W; _w++)dp[n][_w] = -100 * 10000;
	}
	dp[0][0] = 0, dp[0][w[0]] = v[0];
	for (int n = 1; n < N; n++) {
		for (int ww = 0; ww <= W; ww++) {
			if (dp[n - 1][ww] >= 0) {
				dp[n][ww] = max(dp[n][ww],dp[n-1][ww]);
				if (ww + w[n] <= W)dp[n][ww+w[n]] = max(dp[n][ww+w[n]],dp[n-1][ww]+v[n]);
			}
		}
	}
	int m = 0;
	for (int n = 0; n <= W; n++)m = max(m,dp[N-1][n]);
	cout << m << endl;
	return;
}