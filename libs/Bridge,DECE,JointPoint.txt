struct DFSTreeNode {
	VLL childs;
	LL ord, lowlink;
	LL dece;   //何番目の二重連結成分に含まれるか
	DFSTreeNode() : ord(-1), lowlink(-1),dece(-1) {};
};
typedef vector<DFSTreeNode> DFSTree;

void BridgeDECEdfs(UnweightedGraph& G, DFSTree& tree, LL n,LL& ord,VVLL& backedges,LL parent) {
	if (tree[n].ord != -1)return;
	tree[n].ord = ord++;
	tree[n].lowlink = tree[n].ord;
	for (LL next : G[n]) {
		if (tree[next].ord != -1) {
			//後退辺の場合
			if (next == parent)continue;
			backedges[next].push_back(n);
			tree[n].lowlink = min(tree[n].lowlink, tree[next].ord);
		}
		else {
			tree[n].childs.push_back(next);
			BridgeDECEdfs(G, tree, next, ord, backedges,n);
			tree[n].lowlink = min(tree[n].lowlink, tree[next].lowlink);
		}
	}
}

void BridgeDECE(UnweightedGraph& G, DFSTree& tree, VVLL& bridges, VVLL& dece,LL start = 0) {
	tree.resize(G.size());
	bridges.resize(G.size());
	for (LL n = 0; n < G.size(); n++)tree[n].ord = -1;
	VVLL backedges;   //backedges[i]\ni j <==> 後退辺j->iが存在
	backedges.resize(G.size());
	LL ord = 0;   //次設定するord
	//ord,lowlink求める
	BridgeDECEdfs(G, tree, start, ord, backedges,-1);
	//連結要素id
	LL id = 0;
	stack<LL> st;
	for (LL n = 0; n < G.size(); n++) {
		if (tree[n].dece != -1)continue;
		st.push(n);
		dece.push_back(VLL());
		while (!st.empty()) {
			LL cur = st.top();
			st.pop();
			if (tree[cur].dece != -1)continue;
			tree[cur].dece = id;
			dece.back().push_back(cur);
			//子
			for (LL ch : tree[cur].childs) {
				if (tree[cur].ord < tree[ch].lowlink) {
					//橋だった
					bridges[cur].push_back(ch);
				}
				else {
					st.push(ch);
				}
			}
			//後退辺
			for (LL next : backedges[cur]) {
				st.push(next);
			}
		}
		id++;
	}
}

void JointPoint(DFSTree& tree, VLL& jpoints,LL start = 0) {
	if (tree[start].childs.size() > 1) {
		jpoints.push_back(start);
	}
	//関節点の条件:
	//point v is a jointpoint
	// <==> \exist u \in v.childs,u.ord <= v.lowlink
	for (LL n = 0; n < tree.size(); n++) {
		if (n == start)continue;
		for (LL ch : tree[n].childs) {
			if (tree[ch].lowlink >= tree[n].ord) {
				jpoints.push_back(n);
				break;
			}
		}
	}
}

http://yazaten.hatenablog.com/entry/2016/12/05/094725