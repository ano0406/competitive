//ダイクストラする
//O(ElogV)
template<class T>
T* dijkstra(wGraph<T>* g, int s) {
	T* arr = new T[g->N];
	for (int i = 0; i < g->N; i++) {
		arr[i] = -1;
	}
	typedef pair<T, int> t;
	priority_queue<t, vector<t>, greater<t>> q;
	q.push(t(0,s));
	while (!q.empty()) {
		t e = q.top();
		q.pop();
		if (arr[e.second] != -1 && arr[e.second] <= e.first)continue;
		arr[e.second] = e.first;
		for (auto itr = g->E->at(e.second).begin(); itr != g->E->at(e.second).end(); itr++) {
			q.push(t(e.first + (*itr).second,(*itr).first));
		}
	}
	return arr;
}
