void 
solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
using namespace std;

int N, M;
vector<int> A;
vector<int> dp;
int MOD = 1e9 + 7;

void solve() {
	cin >> N >> M;
	A.resize(M + 1);
	for (int m = 0; m < M; m++) {
		cin >> A[m];
	}
	A[M] = N + 1;
	if (N == 1) {
		cout << 1 << endl;
		return;
	}
	else if(N == 2){
		if (M == 0)cout << 2 << endl;
		else cout << 1 << endl;
		return;
	}
	dp.resize(N+1);
	dp[0] = 1;
	int m = 0;
	for (int n = 1; n <= N; n++) {
		if (A[m] == n) {
			dp[n] = -1;
			m++;
			continue;
		}
		dp[n] = 0;
		if (n - 1 >= 0) {
			if (dp[n - 1] != -1)dp[n] += dp[n - 1];
		}
		if (n - 2 >= 0) {
			if (dp[n - 2] != -1)dp[n] += dp[n - 2];
		}
		dp[n] %= MOD;
	}
	if (dp[N] == -1)cout << 0 << endl;
	else cout << dp[N] << endl;
	return;
}
