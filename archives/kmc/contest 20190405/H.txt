#include <iostream>
#include <math.h>
#include <algorithm>
#include <vector>
using namespace std;

void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////

int N, K;
typedef pair<int, int> ii;
vector<int> vecs;
ii dp[100000][2];   //0:未使用,1:既使用

void solve() {
	while (true) {
		cin >> N >> K;
		if (N == 0 && K == 0)return;
		for (int k = 0; k < K; k++) {
			int a;
			cin >> a;
			vecs.push_back(a);
		}
		sort(vecs.begin(),vecs.end());
		int zeroflag = 0;
		if (vecs[0] == 0) {
			zeroflag = 1;
			vecs.erase(vecs.begin());
			K--;
		}
		int s = 0, e = 0;
		int res = 0;
		while (e < K) {
			if (vecs[e] - vecs[s] <= e - s + zeroflag) {
				res = max(e - s + zeroflag+1, res);
				e++;
			}
			else s++;
		}
		cout << res << endl;
		vecs.clear();
	}
}