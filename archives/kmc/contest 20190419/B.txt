void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <algorithm>
#include <float.h>
using namespace std;

int N;
int X[60000], V[60000];

bool isAble(float);  //n秒で集合可能?

void solve() {
	cin >> N;
	for (int n = 0; n < N; n++) {
		cin >> X[n];
	}
	for (int n = 0; n < N; n++) {
		cin >> V[n];
	}
	float s = 0, e = 1000000000;   //弐部探索の開始地点
	while (e - s >= 0.000001*(1 < s?s:1)) {
		if (isAble((s + e) / 2)) {
			e = (s + e) / 2;
		}
		else s = (s + e) / 2;
	}
	cout << e << endl;
	return;
}

bool isAble(float t) {
	float S = FLT_MIN, E = FLT_MAX;
	for (int n = 0; n < N; n++) {
		float s = X[n] - t * V[n], e = X[n] + t * V[n];
		if (S < s)S = s;
		if (E > e)E = e;
		if (S > E)return false;
	}
	return true;
}