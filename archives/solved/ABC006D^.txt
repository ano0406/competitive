void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <functional>
#include <map>


using namespace std;

typedef pair<int, int> pii;

int N;
int dp[30001];

void solve() {
	cin >> N;
	dp[0] = 0;
	for (int n = 1; n <= N; n++)dp[n] = N + 1;
	for (int n = 0; n < N; n++) {
		int c;
		cin >> c;
		int s = 0, e = N;
		while (e - s > 1) {
			int m = (e + s) / 2;
			if (dp[m] < c)s = m;
			else e = m;
		}
		dp[e] = c;
	}
	int i = 1;
	for (; i <= N; i++) {
		if (dp[i] == N + 1)break;
	}
	cout << N - i+1 << endl;
	return;
}