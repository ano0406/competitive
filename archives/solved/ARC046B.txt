#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
using namespace std;
long long MOD = 1e9 + 7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
//typedef boost::multiprecision::cpp_int bigint;

ll N,A, B;

int main() {
	cin >> N >> A >> B;
	if (A == B) {
		if (N % (A + 1) == 0)cout << "Aoki" << endl;
		else cout << "Takahashi" << endl;
	}
	else if (A > B) {
		cout << "Takahashi" << endl;
	}
	else {
		if (N <= A)cout << "Takahashi" << endl;
		else cout << "Aoki" << endl;
	}
	return 0;
}
