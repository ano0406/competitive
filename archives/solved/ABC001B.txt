#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
using namespace std;
const long long MOD = 1e9+7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
//typedef boost::multiprecision::cpp_int bigint;

ll M;
int main() {
	cin >> M;
	if (M < 100)cout << "00" << endl;
	else if (M < 1000)cout << "0" << M / 100 << endl;
	else if (M <= 5000)cout << M / 100 << endl;
	else if (M <= 30000)cout << M / 1000 + 50 << endl;
	else if (M <= 70000)cout << (M / 1000 - 30) / 5 + 80 << endl;
	else cout << 89 << endl;
	return 0;
}
