#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
#include <complex>
#include <cstdio>
#include <list>

//< in.txt > out.txt
using namespace std;
//std::ios::sync_with_stdio(false);
//std::cin.tie(0);
const long long MOD = 1e9 + 7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
typedef vector<ll> VLL;
typedef vector<VLL> VVLL;
//typedef boost::multiprecision::cpp_int bigint;

int main() {
	std::ios::sync_with_stdio(false);
	std::cin.tie(0);
	string S,T;
	cin >> S >> T;
	for (ll n = 0; n < S.size(); n++) {
		if (S[n] == '@' && T[n] == '@')continue;
		else if (S[n] == '@') {
			if (T[n] == 'a'
				|| T[n] == 't'
				|| T[n] == 'c'
				|| T[n] == 'o'
				|| T[n] == 'd'
				|| T[n] == 'e'
				|| T[n] == 'r')continue;
			else {
				cout << "You will lose\n";
				return 0;
			}
		}
		else if (T[n] == '@') {
			if (S[n] == 'a'
				|| S[n] == 't'
				|| S[n] == 'c'
				|| S[n] == 'o'
				|| S[n] == 'd'
				|| S[n] == 'e'
				|| S[n] == 'r')continue;
			else {
				cout << "You will lose\n";
				return 0;
			}
		}
		else {
			if (T[n] == S[n])continue;
			else {
				cout << "You will lose\n";
				return 0;
			}
		}
	}
	cout << "You can win\n";
	return 0;
}
