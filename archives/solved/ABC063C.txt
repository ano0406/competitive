#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
using namespace std;
long long MOD = 1e9 + 7;

long long N;
vector<long long> S;
vector<vector<long long>> DP;

int main() {
	cin >> N;
	S.resize(N);
	for (long long n = 0; n < N; n++)cin >> S[n];
	DP.resize(N + 1, vector<long long>(10000 + 1, 0));
	DP[0][0] = 1;
	for (int n = 1; n <= N; n++) {
		for (int s = 0; s <= 10000; s++) {
			DP[n][s] = DP[n - 1][s];
			if (s - S[n - 1] >= 0)DP[n][s] += DP[n - 1][s - S[n - 1]];
		}
	}
	long long ans = 0;
	for (long long S = 10000; S >= 0; S--) {
		if (S % 10 == 0)continue;
		if (DP[N][S] != 0) {
			ans = S;
			break;
		}
	}
	cout << ans << endl;
	return 0;
}
