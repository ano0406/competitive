#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
#include <complex>
#include <cstdio>
#include <list>
#include <bitset>

//< in.txt > out.txt
using namespace std;
//std::ios::sync_with_stdio(false);
//std::cin.tie(0);
const long long MOD = 1e9 + 7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
typedef vector<ll> VLL;
typedef vector<VLL> VVLL;
//typedef boost::multiprecision::cpp_int bigint;

int main() {
	std::ios::sync_with_stdio(false);
	std::cin.tie(0);
	string S;
	cin >> S;
	ll n = 0;
	while (n < S.size()) {
		if (n == S.size() - 1) {
			ll c = S.back();
			if (c != 'o' && c != 'k' && c != 'u') {
				cout << "NO\n";
				return 0;
			}
			else {
				cout << "YES\n";
				return 0;
			}
		}
		else {
			if (S.substr(n, 2) == string("ch"))n += 2;
			else if (S.substr(n, 1) == string("o"))n++;
			else if (S.substr(n, 1) == string("k"))n++;
			else if (S.substr(n, 1) == string("u"))n++;
			else
			{
				cout << "NO\n";
				return 0;
			}
		}
	}
	cout << "YES\n";
	return 0;
}
