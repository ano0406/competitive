#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
using namespace std;

template<class T>
void in(vector<T>& V) {
	for (auto itr = V.begin(); itr != V.end(); itr++)cin >> *itr;
	return;
}

template<class T>
void out(vector<T>& V) {
	for (T& itr : V)cout << itr << endl;
	return;
}

vector<int> DP1, DP2;
int N;

int main() {
	string S;
	cin >> N >> S;
	DP1.resize(N + 2, 0);
	DP2.resize(N + 2, 0);
	for (int n = 1; n <= N; n++) {
		DP1[n] = DP1[n - 1] + (S[n - 1] == 'W' ? 1:0);
	}
	for (int n = N; n >= 1; n--) {
		DP2[n] = DP2[n + 1] + (S[n - 1] == 'E' ? 1 : 0);
	}
	int ans = INT_MAX;
	for (int n = 1; n <= N; n++) {
		int temp = 0;
		temp = DP1[n - 1] + DP2[n + 1];
		ans = min(ans, temp);
	}
	cout << ans << endl;
	return 0;
}
