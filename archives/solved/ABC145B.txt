#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
#include <complex>

using namespace std;
const long long MOD = 1e9 + 7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
//typedef boost::multiprecision::cpp_int bigint;

ll N;
string S;

int main() {
	cin >> N >> S;
	if (N & 1) {
		cout << "No" << endl;
		return 0;
	}
	bool flag = true;
	for (ll n = 0; n < N / 2; n++) {
		if (S[n] != S[n + N / 2])flag = false;
	}
	if (flag)cout << "Yes" << endl;
	else cout << "No" << endl;
	return 0;
}
