#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
using namespace std;
const long long MOD = 1e9+7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
//typedef boost::multiprecision::cpp_int bigint;

ll N;

int main() {
	cin >> N;
	ld sum = 0;
	for (ll n = 0; n < N; n++) {
		ld x;
		string u;
		cin >> x >> u;
		if (u == string("JPY"))sum += x;
		else sum += x * 380000;
	}
	cout << setprecision(12) << sum << endl;
	return 0;
}
