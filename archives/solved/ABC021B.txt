#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
#include <complex>
#include <cstdio>
#include <list>
#include <bitset>

//< in.txt > out.txt
using namespace std;
//std::ios::sync_with_stdio(false);
//std::cin.tie(0);
const long long MOD = 1e9 + 7;
typedef long long ll;
typedef long long LL;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
typedef vector<ll> VLL;
typedef vector<VLL> VVLL;
typedef unsigned long long ULL;
//typedef boost::multiprecision::cpp_int bigint;

int main() {
	std::ios::sync_with_stdio(false);
	std::cin.tie(0);
	LL N;
	cin >> N;
	LL A, B;
	cin >> A >> B;
	LL K;
	cin >> K;
	VLL V;
	V.push_back(A);
	for (LL k = 0; k < K; k++) {
		LL T;
		cin >> T;
		V.push_back(T);
	}
	V.push_back(B);
	set<LL> S;
	S.insert(A);
	for (ll n = 1; n < V.size(); n++) {
		if (S.find(V[n]) != S.end()) {
			cout << "NO\n";
			return 0;
		}
		S.insert(V[n]);
	}
	cout << "YES\n";
	return 0;
}
