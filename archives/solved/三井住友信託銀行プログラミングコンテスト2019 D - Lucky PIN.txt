#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
#include <complex>
#include <cstdio>
#include <list>

//< in.txt > out.txt
using namespace std;
//std::ios::sync_with_stdio(false);
//std::cin.tie(0);
const long long MOD = 1e9 + 7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
typedef vector<ll> VLL;
typedef vector<VLL> VVLL;
//typedef boost::multiprecision::cpp_int bigint;

VLL V;
ll N;

bool find(ll a, ll b, ll c) {
	ll n = 0;
	for (; n < N; n++) {
		if (V[n] == a)break;
	}
	if (n == N)return false;
	n++;
	for (; n < N; n++) {
		if (V[n] == b)break;
	}
	if (n == N)return false;
	n++;
	for (; n < N; n++) {
		if (V[n] == c)break;
	}
	if (n == N)return false;
	return true;
}

int main() {
	std::ios::sync_with_stdio(false);
	std::cin.tie(0);
	string S;
	cin >> N >> S;
	V.resize(N);
	for (ll n = 0; n < N; n++) {
		V[n] = S[n] - '0';
	}
	ll ans = 0;
	for (ll a = 0; a < 10; a++) {
		for (ll b = 0; b < 10; b++) {
			for(ll c = 0; c < 10; c++) {
				if (find(a, b, c))ans++;
			}
		}
	}
	cout << ans << endl;
	return 0;
}
