#include <iostream>
#include <math.h>
#include <algorithm>
#include <vector>
#include <iomanip>
using namespace std;

void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////

int dp[1000][1000];

void solve() {
	int Q;
	cin >> Q;
	for (int q = 0; q < Q; q++) {
		string X, Y;
		cin >> X >> Y;
		for (int x = 0; x < X.size(); x++) {
			for (int y = 0; y < Y.size(); y++)dp[x][y] = 0;
		}
		bool flag = false;
		for (int y = 0; y < Y.size(); y++) {
			if (X[0] == Y[y])flag = true;
			if (flag)dp[0][y] = 1;
			else dp[0][y] = 0;
		}
		flag = false;
		for (int x = 0; x < X.size(); x++) {
			if (X[x] == Y[0])flag = true;
			if (flag)dp[x][0] = 1;
			else dp[x][0] = 0;
		}
		for (int x = 1; x < X.size(); x++) {
			for (int y = 1; y < Y.size(); y++) {
				if (X[x] == Y[y])dp[x][y] = dp[x - 1][y - 1] + 1;
				else dp[x][y] = max(dp[x-1][y],dp[x][y-1]);
			}
		}
		cout << dp[X.size() - 1][Y.size() - 1] << endl;
	}
	return;
}