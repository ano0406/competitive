void 
solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

long long N, M;
vector<int> X, Y;
int MOD = 1e9 + 7;

void solve() {
	cin >> N >> M;
	N--; M--;
	X.resize(N+1); Y.resize(M+1);
	int prev;
	cin >> prev;
	for (int n = 1; n <= N; n++) {
		int x; cin >> x;
		X[n] = x - prev;
		prev = x;
	}
	cin >> prev;
	for (int m = 1; m <= M; m++) {
		int y; cin >> y;
		Y[m] = y - prev;
		prev = y;
	}
	long long ans = 1;
	long long sum = 0;
	for(long long n = 1;n <= N;n++){
		sum += (long long)(X[n]) * n * (N - n + 1);
	}
	ans = sum % MOD;
	sum = 0;
	for (long long m = 1; m <= M; m++) {
		sum += (long long)(Y[m]) * m * (M - m + 1);
	}
	sum %= MOD;
	ans = (ans * sum) % MOD;
	cout << ans << endl;
	return;
}