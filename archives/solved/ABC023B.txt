#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
#include <complex>
#include <cstdio>
#include <list>

//< in.txt > out.txt
using namespace std;
//std::ios::sync_with_stdio(false);
//std::cin.tie(0);
const long long MOD = 1e9 + 7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
typedef vector<ll> VLL;
typedef vector<VLL> VVLL;
//typedef boost::multiprecision::cpp_int bigint;

int main() {
	std::ios::sync_with_stdio(false);
	std::cin.tie(0);
	ll N;
	string S0;
	cin >> N >> S0;
	if (N % 2 == 0){
		cout << "-1" << "\n";
		return 0;
	}
	ll time = N / 2;
	deque<ll> deq;
	for (ll n = 0; n < N; n++) {
		deq.push_back(S0[n]);
	}
	for (ll t = time; t >= 0; t--) {
		if (t % 3 == 1) {
			if(deq[0] != 'a' || deq.back() != 'c') {
				cout << "-1" << "\n";
				return 0;
			}
			deq.pop_back();
			deq.pop_front();
		}
		else if (t % 3 == 2) {
			if (deq[0] != 'c' || deq.back() != 'a') {
				cout << "-1" << "\n";
				return 0;
			}
			deq.pop_back();
			deq.pop_front();
		}
		else {
			if (deq[0] != 'b' || deq.back() != 'b') {
				cout << "-1" << "\n";
				return 0;
			}
			deq.pop_back();
			if(deq.size()>0)deq.pop_front();
		}
	}
	cout << time << "\n";
	return 0;
}