#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
using namespace std;

template<class T>
void in(vector<T>& V) {
	for (auto itr = V.begin(); itr != V.end(); itr++)cin >> *itr;
	return;
}

template<class T>
void out(vector<T>& V) {
	for (T& itr : V)cout << itr << endl;
	return;
}

int N;
vector<long long> A;
vector<vector<long long>> D;

int main() {
	cin >> N;
	A.resize(N + 1);
	for (int n = 1; n <= N; n++)cin >> A[n];
	D.resize(20, vector<long long>(N + 1, 0));
	for (int n = 2; n <= N; n++) {
		for (int c = 0; c < 20; c++) {
			if ((A[n - 1] >> c) & 1)D[c][n] = n - 1;
			else D[c][n] = D[c][n - 1];
		}
	}
	long long ans = 0;
	for (int n = 1; n <= N; n++) {
		long long temp = LLONG_MAX;
		for (int c = 0; c < 20; c++) {
			if ((A[n] >> c) & 1)temp = min(temp, n - D[c][n]);
			else temp = min(temp,n-D[c][D[c][n]]);
		}
		ans += temp;
	}
	cout << ans << endl;
	return 0;
}
