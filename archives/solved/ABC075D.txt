#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
using namespace std;

template<class T>
void in(vector<T>& V) {
	for (auto itr = V.begin(); itr != V.end(); itr++)cin >> *itr;
	return;
}

template<class T>
void out(vector<T>& V) {
	for (T& itr : V)cout << itr << endl;
	return;
}

struct point {
	long long x, y;
};
vector<point> A;
int N, K;

long long judge(int a, int b) {
	vector<point> AA;
	for (int n = a; n <= b; n++) {
		AA.push_back(A[n]);
	}
	sort(AA.begin(), AA.end(), [](point a, point b) {return a.y < b.y; });
	long long ans = LLONG_MAX;
	for (int n = 0; n <= AA.size() - K; n++) {
		ans = min(ans, AA[n + K - 1].y - AA[n].y);
	}
	return ans * (A[b].x - A[a].x);
}

int main() {
	cin >> N >> K;
	A.resize(N);
	for (point& p : A) {
		cin >> p.x >> p.y;
	}
	sort(A.begin(), A.end(), [](point a, point b) {return a.x < b.x; });
	long long ans = LLONG_MAX;
	for (int a = 0; a <= N - K; a++) {
		for (int b = a + K - 1; b < N; b++) {
			ans = min(ans, judge(a, b));
		}
	}
	cout << ans << endl;
	return 0;
}
