#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
#include <complex>
#include <cstdio>
#include <list>
#include <bitset>

//< in.txt > out.txt
using namespace std;
//std::ios::sync_with_stdio(false);
//std::cin.tie(0);
const long long MOD = 1e9 + 7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
typedef vector<ll> VLL;
typedef vector<VLL> VVLL;
//typedef boost::multiprecision::cpp_int bigint;

int main() {
	std::ios::sync_with_stdio(false);
	std::cin.tie(0);
	ll N;
	cin >> N;
	VLL P, Q;
	P.resize(N);
	for (ll n = 0; n < N; n++)cin >> P[n];
	Q.resize(N);
	for (ll n = 0; n < N; n++)cin >> Q[n];
	ll a, b;
	VLL V(N, 0);
	for (ll n = 0; n < N; n++)V[n] = n + 1;
	ll t = 0;
	do {
		if (P == V)a = t;
		if (Q == V)b = t;
		t++;
	} while (next_permutation(V.begin(), V.end()));
	cout << (ll)abs(b - a) << "\n";
	return 0;
}
