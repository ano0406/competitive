#include <iostream>
#include <vector>
#include <limits.h>
#include <algorithm>
#include <string>
#include <math.h>
#include <limits.h>
#include <queue>
#include <map>
#include <set>
#include <iomanip>
#include <bitset>
#include <cassert>
#include <random>
#include <functional>
#include <stack>
#include <iomanip>
#include <cassert>
//#include <boost/multiprecision/cpp_int.hpp>
#include <complex>
#include <cstdio>
#include <list>

using namespace std;
//std::ios::sync_with_stdio(false);
//std::cin.tie(0);
const long long MOD = 1e9 + 7;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<ld, ll> pdl;
typedef pair<ld, ld> pdd;
typedef vector<ll> VLL;
typedef vector<VLL> VVLL;
//typedef boost::multiprecision::cpp_int bigint;

int main() {
	std::ios::sync_with_stdio(false);
	std::cin.tie(0);
	for (ll q = 0; q < 3; q++) {
		struct time {
			ll h, m, s;
	};
		time start, end;
		cin >> start.h >> start.m >> start.s;
		cin >> end.h >> end.m >> end.s;
		if (end.s < start.s) {
			end.s += 60;
			end.m--;
		}
		if (end.m < start.m) {
			end.m += 60;
			end.h--;
		}
		cout << end.h - start.h << " " << end.m - start.m << " " << end.s - start.s << "\n";
	}
	return 0;
}
