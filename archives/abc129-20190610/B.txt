void solve();

int main() {
	solve();
	return 0;
}

//////////////////////////////////////////////////
//////////////////////////////////////////////////
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int N;
vector<int> W, wforward, wback;

void solve() {
	cin >> N;
	W.resize(N);
	wforward.resize(N);
	wback.resize(N);
	for (int n = 0; n < N; n++)cin >> W[n];
	wforward[0] = W[0];
	for (int n = 1; n < N; n++)wforward[n] = wforward[n - 1] + W[n];
	wback[N - 1] = W[N - 1];
	for (int n = N - 2; n >= 0; n--)wback[n] = wback[n + 1] + W[n];
	int ans = 100*100+1;
	for (int n = 0; n < N - 1; n++) {
		ans = min(ans, abs(wforward[n]-wback[n+1]));
	}
	cout << ans << endl;
	return;
}
